<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches
			? 'dark'
			: 'light';
	};

	const initializeTheme = () => {
		const isDark = getThemePreference() === 'dark';
		document.documentElement.classList.toggle('dark', isDark);
	};

	const handleViewTransition = () => {
		document.addEventListener('astro:after-swap', initializeTheme);
	};

	const setupThemeObserver = () => {
		if (typeof localStorage !== 'undefined') {
			const observer = new MutationObserver(() => {
				const isDark = document.documentElement.classList.contains('dark');
				localStorage.setItem('theme', isDark ? 'dark' : 'light');
			});
			observer.observe(document.documentElement, {
				attributes: true,
				attributeFilter: ['class'],
			});
		}
	};

	initializeTheme();
	handleViewTransition();
	setupThemeObserver();
</script>
