---
import ChapterList from '@/components/chapter-list.astro';
import CourseFooter from '@/components/course-footer.astro';
import MobileCourseMenu from '@/components/mobile-course-menu';
import SEO from '@/components/seo.astro';
import TableOfContents from '@/components/table-of-contents';
import ContentLayout from '@/layouts/content-layout.astro';
import { getCollection, getEntries } from 'astro:content';

export async function getStaticPaths() {
	const courses = await getCollection('courses-meta');

	const paths = courses
		.filter((course) => course.data.isDraft !== true) // Filter out drafts
		.flatMap((course) =>
			course.data.chapters.map((chapter) => ({
				params: { slug: chapter.slug }, // Generate path for each chapter
				props: {
					course,
					chapter,
				},
			})),
		);

	return paths;
}

const { course, chapter } = Astro.props;

const allChapters = await getEntries(course.data.chapters);

const currentIndex = allChapters.findIndex((c) => c.slug === chapter.slug);
const nextChapter =
	currentIndex < allChapters.length - 1
		? allChapters[currentIndex + 1]
		: undefined;
const prevChapter =
	currentIndex > 0 ? allChapters[currentIndex - 1] : undefined;

const courseChapter = allChapters[currentIndex];

const { Content, headings } = await courseChapter.render();

const getCourseChapterTitle = () => {
	return courseChapter.data.title + ' | ' + course.data.title;
};

const title = getCourseChapterTitle();
const description = courseChapter.data.description || course.data.description;

const chapterListForNavigation = allChapters.map((chapter) => ({
	title: chapter.data.title,
	slug: chapter.slug,
}));
---

<ContentLayout>
	<SEO slot='head' title={title} description={description} />
	<ChapterList
		slot='left-sidebar'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<MobileCourseMenu
		client:load
		slot='mobile-course-menu'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<Content />
	<CourseFooter slot='footer' next={nextChapter} prev={prevChapter} />
	<TableOfContents client:load slot='right-sidebar' headings={headings} />
</ContentLayout>
