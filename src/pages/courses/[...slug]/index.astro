---
import ChapterList from '@/components/chapter-list.astro';
import ContentFooter from '@/components/content-footer.astro';
import MobileContentMenu from '@/components/mobile-content-menu';
import SEO from '@/components/seo.astro';
import TableOfContents from '@/components/table-of-contents';
import ContentLayout from '@/layouts/content-layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
	const courses = await getCollection('courses');

	const paths = courses
		.filter((course) => course.data.isDraft !== true) // Filter out drafts
		.flatMap((course) =>
			course.data.chapters.map((chapter) => ({
				params: { slug: `${course.slug}/${chapter.slug}` }, // Generate path for each chapter
				props: {
					course,
					chapter,
				},
			})),
		);

	return paths;
}

const { course, chapter } = Astro.props;

const allChapters = course.data.chapters;

const currentIndex = allChapters.findIndex((c) => c.slug === chapter.slug);
const nextChapter =
	currentIndex < allChapters.length - 1
		? {
				title: allChapters[currentIndex + 1].title,
				slug: `${course.slug}/${allChapters[currentIndex + 1].slug}`,
			}
		: undefined;
const prevChapter =
	currentIndex > 0
		? {
				title: allChapters[currentIndex - 1].title,
				slug: `${course.slug}/${allChapters[currentIndex - 1].slug}`,
			}
		: undefined;

const courseChapter = allChapters[currentIndex];

const { Content, getHeadings } = await import(
	`../../../content/courses/${course.slug}/_chapters/${courseChapter.slug}.mdx`
);

const getCourseChapterTitle = () => {
	return courseChapter.title + ' | ' + course.data.title;
};

const title = getCourseChapterTitle();
const description = course.data.description;

const chapterListForNavigation = allChapters.map((chapter) => ({
	title: chapter.title,
	slug: `${course.slug}/${chapter.slug}`,
}));
---

<ContentLayout>
	<SEO slot='head' title={title} description={description} />
	<ChapterList
		slot='left-sidebar'
		contentType='courses'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<MobileContentMenu
		client:load
		slot='mobile-menu'
		contentType='courses'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<Content />
	<ContentFooter
		slot='footer'
		contentType='courses'
		next={nextChapter}
		prev={prevChapter}
	/>
	<TableOfContents client:load slot='right-sidebar' headings={getHeadings()} />
</ContentLayout>
