---
import ChapterList from '@/components/chapter-list.astro';
import ContentFooter from '@/components/content-footer.astro';
import MobileContentMenu from '@/components/mobile-content-menu';
import SEO from '@/components/seo.astro';
import TableOfContents from '@/components/table-of-contents';
import ContentLayout from '@/layouts/content-layout.astro';
import { getCollection, getEntries } from 'astro:content';

export async function getStaticPaths() {
	const allSystemDesigns = await getCollection('system-design');

	const paths = allSystemDesigns
		.filter((systemDesign) => systemDesign.data.isDraft !== true) // Filter out drafts
		.flatMap((systemDesign) =>
			systemDesign.data.chapters.map((chapter) => ({
				params: { slug: chapter.slug }, // Generate path for each chapter
				props: {
					systemDesign,
					chapter,
				},
			})),
		);

	return paths;
}

const { systemDesign, chapter } = Astro.props;

const allChapters = await getEntries(systemDesign.data.chapters);

const currentIndex = allChapters.findIndex((c) => c.slug === chapter.slug);
const nextChapter =
	currentIndex < allChapters.length - 1
		? {
				title: allChapters[currentIndex + 1].data.title,
				slug: allChapters[currentIndex + 1].slug,
			}
		: undefined;
const prevChapter =
	currentIndex > 0
		? {
				title: allChapters[currentIndex - 1].data.title,
				slug: allChapters[currentIndex - 1].slug,
			}
		: undefined;

const systemDesignChapter = allChapters[currentIndex];

const { Content, headings } = await systemDesignChapter.render();

const getSystemDesignChapterTitle = () => {
	return systemDesignChapter.data.title + ' | ' + systemDesign.data.title;
};

const title = getSystemDesignChapterTitle();
const description =
	systemDesignChapter.data.description || systemDesign.data.description;

const chapterListForNavigation = allChapters.map((chapter) => ({
	title: chapter.data.title,
	slug: chapter.slug,
}));
---

<ContentLayout>
	<SEO slot='head' title={title} description={description} />
	<ChapterList
		slot='left-sidebar'
		contentType='system-design'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<MobileContentMenu
		client:load
		slot='mobile-menu'
		contentType='system-design'
		chapters={chapterListForNavigation}
		currentChapterSlug={chapter.slug}
	/>
	<Content />
	<ContentFooter
		slot='footer'
		contentType='system-design'
		next={nextChapter}
		prev={prevChapter}
	/>
	<TableOfContents client:load slot='right-sidebar' headings={headings} />
</ContentLayout>
