---
import type { ImageMetadata } from 'astro';
import { SITE_METADATA } from '@/constants/site-config';

interface Props {
	title?: string;
	description?: string;
	canonicalUrl?: string;
	pageType?: 'website' | 'article';
	image?: ImageMetadata | string;
	date?: string;
	author?: string;
}

const {
	title,
	description = SITE_METADATA.description,
	canonicalUrl = Astro.url.href,
	pageType = 'website',
	image = SITE_METADATA.socialImage,
	date,
	author = SITE_METADATA.author,
} = Astro.props;

const siteTitle = title
	? `${title} | ${SITE_METADATA.title}`
	: SITE_METADATA.title;

const imageUrl =
	typeof image === 'string'
		? new URL(image, Astro.site)
		: new URL(image.src, Astro.site);
---

<meta charset='utf-8' />
<title>{siteTitle}</title>
<meta name='description' content={description} />
<link rel='canonical' href={canonicalUrl} />

<meta property='og:site_name' content={SITE_METADATA.title} />
<meta property='og:title' content={siteTitle} />
<meta property='og:description' content={description} />
<meta property='og:url' content={canonicalUrl} />
<meta property='og:type' content={pageType} />
<meta property='og:image' content={imageUrl} />
<meta property='og:image:alt' content={description} />

<meta name='twitter:card' content='summary_large_image' />
<meta name='twitter:site' content={SITE_METADATA.twitterHandle} />
<meta name='twitter:title' content={siteTitle} />
<meta name='twitter:description' content={description} />
<meta name='twitter:image' content={imageUrl} />

{
	pageType === 'article' && date && (
		<meta property='article:published_time' content={date} />
	)
}
{
	pageType === 'article' && author && (
		<meta property='article:author' content={author} />
	)
}

<link rel='icon' type='image/svg+xml' href='/favicon.svg' />

<meta name='viewport' content='width=device-width, initial-scale=1' />
